# -*- coding: utf-8 -*-
"""KUSH-tweepy(ELONMUSK).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RMjH6dGcKVsUv00xlDjwg7QbZg91iIf4
"""

import tweepy
import pandas as pd
import matplotlib.pyplot as plt

"""# **PART - 1**"""

consumer_key = 'w7Riu6txAY4M3zB67TWq2UBKB'
consumer_secret = 'RnkmgEXgyPG2xlXCHLFYCxdwXxiQKsWeeSALVy9aZMBhqmMyxV'
access_token = '2864499197-eFIyBlD5Tr3egU76v7pN5M7Yr5VPnHS5iYc9sfb'
access_token_secret = 'SCqnUIqxjqMsgbGPU2C1RxFwi7DHIbFAsNr4MxcEFtCSI'

auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(access_token, access_token_secret)
api = tweepy.API(auth,wait_on_rate_limit=True)

username = 'elonmusk'

tweets = tweepy.Cursor(api.user_timeline, id=username, tweet_mode='extended').items()
 
tweets_list = [[tweet.created_at, tweet.full_text, tweet.id_str, tweet.retweet_count, tweet.favorite_count, tweet.source] for tweet in tweets]

tweets_df = pd.DataFrame(tweets_list)
tweets_df.columns = ['Date & Time', 'Tweet', 'Tweet_ID', 'Re_Tweet_Count', 'Favorite_Count', 'Tweet Source']
tweets_df.head()

tweets_df.to_csv('Elon Musk Tweets.csv')

"""# **PART - 2**"""

#Splitting the Date-Time to Date and Time seperately.
tweets_df['Date'] = pd.to_datetime(tweets_df['Date & Time']).dt.date
tweets_df['Time'] = pd.to_datetime(tweets_df['Date & Time']).dt.time
tweets_df.head()

#Re-arranging the Columns.
df = tweets_df[['Date','Time','Tweet','Tweet_ID','Re_Tweet_Count','Favorite_Count', 'Tweet Source' ]]
df.head()

"""### **1.  20 most common words in the set of tweets (exclude words shorter than 4 characters).**"""

from collections import Counter
frame = Counter(" ".join(df["Tweet"].str.lower()).split()).most_common()
result = pd.DataFrame(frame, columns = ['Word','Occurence']) 

#Applying character condition on our dataframe. 
result['Character_Condition'] = result['Word'].str.len()>3

#We get a result where the words satisfying the condition is marked as True in a new column named Character_Condition. 
final_result = result.loc[result['Character_Condition'] == True]

#Printing 20 words and the two columns that we require.
df1 = final_result[['Word', 'Occurence']].head(20)
df1

df1.plot(kind='barh', x='Word', figsize=(14,10))
plt.title('Common Word Occurences', fontsize=18)
plt.xlabel('Occurence', fontsize=16)
plt.ylabel('Words', fontsize=16)
plt.style.use('ggplot')

"""### **2.  The most favorited tweet.**"""

df2 = df[df.Favorite_Count == df.Favorite_Count.max()]
df2[['Tweet','Favorite_Count']]

"""### **3.  The most retweeted tweet.**"""

df3 = df[df.Re_Tweet_Count == df.Re_Tweet_Count.max()]
df3[['Tweet','Re_Tweet_Count']]

"""### **4.  Sources of tweets (ie, web, iOS, android, etc).**"""

df4 = df[['Tweet','Tweet Source']]
df4.head()

#The Graph consists of one bar as the tweets were only sent from iPhone.
df4['Tweet Source'].value_counts().plot(kind='bar', width=0.1)
plt.xticks(rotation=0)
plt.title('Tweets Vs Tweet Source', fontsize=18)
plt.xlabel('Tweet Source', fontsize=16)
plt.ylabel('Number of Tweets', fontsize=16)

"""### **5.  Tweets by Year.**"""

df5 = df.copy()
df5['Tweet Year'] = df5['Date'].map(lambda x: x.strftime('%Y'))
df5 = df5[['Tweet Year', 'Tweet']]
df5.head()

#The graph consists of one bar as the tweets we got were of only 2021.
df5['Tweet Year'].value_counts().plot(kind='bar', width=0.1)
plt.xticks(rotation=0)
plt.title('Tweets Vs Year', fontsize=18)
plt.xlabel('Year', fontsize=16)
plt.ylabel('Number of Tweets', fontsize=16)

"""### **6.  Tweets by Month.**"""

df6 = df.copy()
df6['Date'] = pd.to_datetime(df6['Date'])
df6['Tweet Month'] = df6['Date'].dt.month_name()
df6 = df6[['Tweet Month', 'Tweet']]
df6.head()

#The graph consists of one bar as the tweets we got were of only one month.
df6['Tweet Month'].value_counts().plot(kind='bar', width=0.1)
plt.xticks(rotation=0)
plt.title('Tweets Vs Month', fontsize=18)
plt.xlabel('Month', fontsize=16)
plt.ylabel('Number of Tweets', fontsize=16)

"""### **7.  Tweets by day of the week.**"""

df7 = df.copy()
df7['Date'] = pd.to_datetime(df7['Date'])
df7['Day of Week'] = df7['Date'].dt.day_name()
df7 = df7[['Date', 'Day of Week', 'Tweet']]
df7.head()

df7['Day of Week'].value_counts().plot(kind='bar', width=0.5)
plt.xticks(rotation=45)
plt.title('Tweet Vs Day of Week', fontsize=18)
plt.xlabel('Day', fontsize=16)
plt.ylabel('Number of Tweets', fontsize=16)